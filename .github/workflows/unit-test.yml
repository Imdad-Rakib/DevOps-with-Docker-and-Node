name: Run Unit Tests

on: 
  pull_request:
    branches: ['main', 'dev'] 
  workflow_dispatch:

jobs:
  run-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install dependencies
      run: npm install
        

    - name: Set up Docker
      run: |
        curl -fsSL https://get.docker.com -o get-docker.sh
        sudo sh get-docker.sh
        sudo systemctl start docker
        sudo systemctl enable docker
    
    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose

    - name: Set up Docker Compose
      run: docker-compose up -d database

    # - name: Wait for the database to be ready
    #   run: |
    #     until docker-compose exec -T database mysqladmin ping --silent; do
    #       echo "Waiting for the database connection..."
    #       sleep 5
    #     done
    
    - name: Run Unit Tests
      env:
        COOKIE_SECRET: ${{ secrets.APP_SECRET.COOKIE_SECRET }}
        JWT_SECRET: ${{ secrets.APP_SECRET.JWT_SECRET }}
        JWT_EXPIRY: ${{ secrets.APP_SECRET.JWT_EXPIRY }}
        COOKIE_NAME: ${{ secrets.APP_SECRET.COOKIE_NAME }}
        PORT: ${{ secrets.APP_SECRET.PORT }}
        CLIENT_PORT: ${{ secrets.APP_SECRET.CLIENT_PORT }}
        EMAIL: ${{ secrets.APP_SECRET.EMAIL }}
        KEY: ${{ secrets.APP_SECRET.KEY }}
        MYSQL_ROOT_PASSWORD: ${{ secrets.APP_SECRET.MYSQL_ROOT_PASSWORD }}
        MYSQL_DATABASE: ${{ secrets.APP_SECRET.MYSQL_DATABASE }}
        MYSQL_USER: ${{ secrets.APP_SECRET.MYSQL_USER }}
        MYSQL_PASSWORD: ${{ secrets.APP_SECRET.MYSQL_PASSWORD }}
        MYSQL_PORT: ${{ secrets.APP_SECRET.MYSQL_PORT }}
        MYSQL_HOST: ${{ secrets.APP_SECRET.MYSQL_HOST }}
      run: npm test
