name: Build and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          # path: "docker-compose.prod.yaml"

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # Step 3: Build Docker image using the production stage
      - name: Build Docker image (production stage)
        run: |
          docker build --target production -t ${{ secrets.DOCKERHUB_USERNAME }}/docker-node-api:${{ github.sha }} .

      # Step 4: Tag the Docker image
      # - name: Tag Docker image
      #   run: |
      #     docker tag ${{ secrets.DOCKERHUB_USERNAME }}/docker-node-api:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/docker-node-api:latest

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/docker-node-api:${{ github.sha }}
          # docker push ${{ secrets.DOCKERHUB_USERNAME }}/docker-node-api:latest

  
      - name: Copy docker-compose.prod.yaml and deploy
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          source: ./docker-compose.prod.yaml
          target: /Node-App/
          

      - name: SSH into VM and deploy using Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd /Node-App/
            docker-compose -f docker-compose.prod.yaml down
            docker-compose -f docker-compose.prod.yaml up -d
